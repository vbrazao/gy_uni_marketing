---
title: "Descriptives"
execute:
  echo: false
  message: false
format:
  html: 
    toc: true
  docx:
    toc: true
---

```{r}
#| message: false

library(groundhog)

groundhog_day <- "2024-03-01"

groundhog::meta.groundhog(groundhog_day)

groundhog::groundhog.library(
  "
library(here)
library(tidyverse)
library(scales)
library(gtsummary)
library(flextable)
library(rempsyc)
  ", date = groundhog_day
)


tab_n <- readRDS(
  here::here("02_analysis-codes", "outputs", "table_n.rds")
)

tab_weeks <- readRDS(
  here::here("02_analysis-codes", "outputs", "table_weeks.rds")
)

tab_uni <- readRDS(
  here::here("02_analysis-codes", "outputs", "table_uni.rds")
)

tab_cat <- readRDS(
  here::here("02_analysis-codes", "outputs", "table_cat.rds")
)


tab_list <- readRDS(
  here::here("02_analysis-codes", "outputs", "tables_uni_cat.rds")
)

plot_list <- readRDS(
  here::here("02_analysis-codes", "outputs", "plots_total.rds")
)

plot_timeline <- readRDS(
  here::here("02_analysis-codes", "outputs", "plot_timeline.rds")
)
```

# Tables
## Number of posts by university and category
```{r}
rempsyc::nice_table(tab_n, separate.header = TRUE, italics = seq(tab_n))
```

## Number of posts by category and week

(To create this table, all dates except for Fridays were transformed into the date of the next Friday. Therefore, the displayed counts correspond to the number of posts published from the previous Saturday (inclusive) until the Friday that corresponds to the date in the "7 days ending on" column. This was chosen so that the first "week" corresponds to the 7 days immediately after Oct 7, inclusive. As the last day of data is Feb 7, 2024, there is not data for Feb 8 and 9, so the last "week" contains only 5 days of data.) 

```{r}
rempsyc::nice_table(tab_weeks, separate.header = TRUE, italics = seq(tab_weeks))
```


## All posts, by university
```{r}
rempsyc::nice_table(tab_uni, separate.header = TRUE, italics = seq(tab_uni))
```

## All posts, by category
```{r}
rempsyc::nice_table(tab_cat, separate.header = TRUE, italics = seq(tab_cat))
```

## One table per category, by university

```{r}
#| output: asis

for (i in 1:length(tab_list)){
  tab <- tab_list[[i]]
  
  cat <- names(tab_list)[[i]]
  
  title <- paste0("Descriptives for ", cat, " posts, by University")
  
    cat(sep = "\n", knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    "rempsyc::nice_table(tab, separate.header = TRUE, italics = seq(tab), 
                      title = title)",
    "```"
  )))
}
```

# Plots

## One plot per University, by category

```{r}
#| output: asis

for (i in 1:length(plot_list)){
  plot <- plot_list[[i]]
  
  university <- names(plot_list)[[i]]
  
  title <- paste0("Total interactions for\n", university, "\nposts, by category")
  
  plot_titled <- plot + 
    scale_x_discrete(labels = scales::label_wrap(15)) +
    ggplot2::labs(title = stringr::str_wrap(title, width = 35), x = "")
  
    res <- knitr::knit_child(quiet = TRUE, text = c(
    "```{r}",
    "#| echo: false",
    "print(plot_titled)",
    "```"
  ), envir = environment())
    
    cat(res, sep = '\n')
}
```

## Alternative timeline plot

```{r}
plot_timeline
```

